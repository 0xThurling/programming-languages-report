Is Godot out of the question?  Is it mostly a performance thing?
I've made several games in Godot and continue to use it, but it has serious issues that hamper it from prime time. Here are some I've encountered in my latest project, a point-and-click adventure in the vein of Myst- When playing non-OGV video files there will always be a black screen in the first frame of the video, no way around it- OGV video streams suffer from sound stuttering problems on playback- There are some performance bottlenecks around 3D and occlusion culling, which will hopefully be fixed in 4.0- No browser web view so you cannot use HTML for markup or design, meaning making interactive pages (like an in-game wiki) is a massive slog- Font-rendering issues with blurriness and lack of pixel-perfect sizing (if you are doing retro pixel art fonts they will suffer from anti-aliasing)- Importing 3D assets is wonky and you still need to write custom import tooling scripts in order to make it even slightly usable. Even then you will most likely have to redo all the lighting on your modelsI think Godot 4.0 will be a great leap forward and I'm very much rooting for them. But if you are trying to make a big 3D A-level game, you will spend a lot of time with your head in your hands. At least with Unity and Unreal they have large asset marketplaces and very active communities so you can get around a lot of frustrations. Godot is still quite small in that regard. However for 2D or smaller scoped 3D indie games, it's really powerful and versatile. I personally enjoy the Godot workflow with nodes and signals connecting them much more than my experience with Unity and prefabs, which I found to be a bit convoluted.
On the other hand, being fully open source means if you've got a good development team you may be able to hack Godot itself to work around whatever limitations are currently biting you the hardest, and your shipped product doesn't lock you into any sort of revenue share or subscription fees because of the engine choice. This seems to be the approach done for the Sonic Colors: Ultimate remaster and as Godot gets better it may get even more attention from teams developing an "almost certain success" like a new big-IP game.But I agree that they're still the underdog, and people who were holding out until 3.0 might continue holding out until 4.0 if they're planning on doing a demanding 3D game. I'm rooting for them still too though.
Absolutely. I actually compiled my own version of Godot in order to enable a speech-to-text module (https://github.com/menip/godot_speech_to_text) for a project. While some might see that an overly arcane technical annoyance, the fact I was able to do so just shows the promise of a powerful open-source libre engine. Hope to contribute a patch to Godot proper someday. I also find it so cool that it's bootstrapped - that is to say, Godot is created using Godot!
I've started learning Godot to replace Unity for the prototyping role, but under no circumstances would I ship a game in stock Godot except for a game jam.The stock editor workflow is solid enough and overall fairly pleasant, but the documentation is abysmal, features aren't up to par with the Unity of even a decade ago, and code quality is "improving".  I also have absolutely no clue why the world needed an even worse rehash of python that has absolutely no compatibility with any of the python ecosystem.  I've read their blog post.  I still do not understand.Godot 4 looks much more promising on the feature front, GDNative is passable, and at the very least, you can fix the engine yourself if you need to.  I don't feel much of a sense of loss from ditching Unity.
Is anyone working on making Python work with it?  That would be amazing.
This[0] appears to be the main project working on Python. As with all language ports, YMMV.I personally would wait until after Godot 4 and the new GDExtension system are out and, if it's possible, people start making language support as plugins rather than needing to recompile Godot from source.[0]https://github.com/touilleMan/godot-python
Yeah, I would not use unity or unreal. They're too big and too complex.Godot is light and simple.Unreal and unity offer sophisticated features for developers who can't take the time to do some low level.But:1. Inexperienced developers should not aim for high end graphics and features in the first place, so using those engines is irrelevant to them, they should learn to do simple things themselves. The big race for graphics quality belong to AAA games who don't use those engines.2. Experienced developers are working for complex games, and are able to avoid the clutter of unity and unreal, because they know what game they want to do, or they work with custom made engines, tailored for their needs.Unreal and unity are monsters, because they're generic and do everything at the same time.Godot is the best solution in my opinion. Do small things if you can, avoid big things. If you want to do big things, have the ambition to do them right, and like actual professional developers, don't use unity or unreal.
for me would be lack of AR/VR support as that is what I want to build apps/games for.
Unity is the engine most used by indy VR devs & even the few using UE are not happy the new Nanite and Lumen enhancements don't work in XR.But don't take my word for it there was a good Unity vs UE twitter thread just last week [1][1]https://twitter.com/andrewpprice/status/1514168832738607111
Godot was the only engine out of Godot, Unity, and UE4 that I could even get VR to even work.
Godot works fine for VR, particularly if you are developing the Quest.  I am making a VR game in Godot.  Check out:https://github.com/NeoSpark314/godot_oculus_quest_toolkit
